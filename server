/* A simple server in the internet domain using TCP
   The port number is passed as an argument */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <iostream>

void error(const char *msg)
{
    std::cerr << msg;
    exit(1);
}

int main(int argc, char *argv[])
{
     int sockfd, newsockfd, portno;
     socklen_t clilen;

     sockaddr_in serv_addr = {};
     sockaddr_in cli_addr = {};
     int n;
     sockfd = socket(AF_INET, SOCK_STREAM, 0);
     if (sockfd < 0) {
         std::cerr << "ERROR opening socket";
         return -1;
     }
     portno = 12345;
     serv_addr.sin_family = AF_INET;
     serv_addr.sin_addr.s_addr = INADDR_ANY;
     serv_addr.sin_port = htons(portno);
     if (bind(sockfd, (struct sockaddr *) &serv_addr,
              sizeof(serv_addr)) < 0) {
              error("ERROR on binding");
     }
     listen(sockfd,5);
     clilen = sizeof(cli_addr);
     newsockfd = accept(sockfd,
                 (struct sockaddr *) &cli_addr,
                 &clilen);
     if (newsockfd < 0){
          error("ERROR on accept");
     }
     char buffer[256] = {};
     n = read(newsockfd,buffer,255);
     if (n < 0) {
         error("ERROR reading from socket");
     }
     std::cout << "Here is the message: " << buffer << std::endl;
     std::string replyMessage = "I got your message";
     n = write(newsockfd,replyMessage.data(), replyMessage.size());
     if (n < 0) {
         error("ERROR writing to socket");
     }
     close(newsockfd);
     close(sockfd);
     return 0;
}
